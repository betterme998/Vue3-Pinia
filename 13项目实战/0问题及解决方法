1.本地img的src数据动态显示后，找不到图片报错。

  情况一：1.webpack创建的项目
    在动态绑定img的src时，使用require变量来进行包裹(item.url 是 图片路径)
    <img :src= "require(item.url)">
  
  情况二：2.vite创建的项目
  vite使用 es module 使用必须使用url查找图片，所有返回url 
  使用函数返回
    const getAssetURL = (image) => {
      ; 第一个参数是相对路径
      ; 第二个参数是，当前文件夹的url
      根据当前文件夹路径查找相对路径图片，并返回超链接href
      return new URL(`../../assets/img/tabbar/${image}`, import.meta.url).href
    }
    <img :src= "require(item.url)">

2.修改第三方UI组件库的样式

  1.如果使用插槽，插入自己的元素
    .那么在自己的作用域中直接修改这个元素
  2.没有使用插槽，要修改组件默认样式
    .全局定义一个变量，覆盖默认变量值
      .缺点：全局修改，可能影响其他值
    .局部定义一个变量，覆盖默认变量的值
      .优点只修改局部变量的值
    .直接找到对应的子组件选择器，进行修改
      . :deep(子组件中源选择器)
        .直接修改css样式

3.首页中跳转到其他页面，该页面占据整个屏幕不需要tabbar。但是点进去会看到tabbar.需要隐藏tabbar
  两种解决方案
  方案一：使用route
    1.在需要要显示tabbar页面的路由映射中配置meta:{hiderTabBar:true}// 判断是否隐藏tabbar
      .通过useRoute()拿到当前活跃的route
      .在通过v-if="!route.meta.hiderTabBar"来判断是否显示tabbar.

  方案二：通过css
    2.给要占据整个屏幕的页面设置css属性
      position: relative;
      z-index: 9;//在tabbar上面
      height: 100vh;//最外层高度
      background-color: #fff; //设置背景遮盖tabbar
      overflow-y: auto;//超出部分出现滚动条

      可将样式抽取到公共的css中,想隐藏tabbar的页面就使用对应的class

4.当定义一个常量来保存请求的数据，并直接在template中使用数据时，一开始数据值为undefined，拿不到数据会报错。
  解决方法：通过if判断太麻烦
  简洁办法：?.
    在取值时，通过?.的方式
      例子：const allCity = ref() //保存网络请求数据后--> 在template中使用<h2>allCity?.data?.list</h2>
      .? 表示不为空就往下取值
