1.导航栏搭建，使用vant
  .修改主题颜色
2.轮播图
  2.1.请求数据
    数据有点复杂就先看要做那个模块，找到模块的数据从复杂数据中抽离出去，抽离出去就可以把每个部分封装成组件。把抽离
    的数据传递给组件，让组件帮助展示。
    1.在service的modules中创建detail.js 来写发送网络请求的函数
    2.在详情页的store中调用数据请求函数
    3.在详情页调用store中封装的方法并传入参数
  2.2.由于数据复杂,一个一个拿比较复杂,所以可以使用computed去拿到指定的值,用起来会相对方便一些

  2.3.使用vant封装轮播图,单独抽成组件,放到cpns文件夹中

3.自定义轮播图指示器
  当图片越来越多的时候就会有很多指示器，官方就对其进行分类，但是请求的数据没有分类，要自己分类。
  3.1.使用vant轮播图中自定义指示器，通过作用域插槽拿到子组件传过来的值，并使用

  3.2.对数据进行分类
    .数据是通过一个值来区别是哪里的数据如：1,2，3,4等.将原有数据处理成对象，对应是由key-value组成的，使用用来区分的数子作为key，使用数组来存放所以对应key的数据作为value。
      .分好类就可以遍历，就可以决定轮播图的类别
      {
        "2":[item1,item2,...],
        "4":[itemx,itemy,...],
        "8":[itema,itemb,...]
      }
    1.对数据进行转换
    2.对数据进行展示
    3.使用正则表达式处理自定义标签的title
    4.选中状态
      .样式改变
  
    轮播图自定义标签总结：
      从store中拿到数据后,对数据进行重构。数组重构成对象形式。
      展示部分数据，并使用正则表达式处理title，三元运算符绑定action class
      使用插件解决刷新store数据消失问题
      并使用监听器监听从store获取的数据，如变化重新执行数据处理逻辑
      通过拿到当前展示图片的item数据（使用从store中的数据拿），传递给标签数据处理函数。拿到对应key对应的组件。通过fineIndex判断是否有，并返回，拿到当前轮播的index

4.店铺信息
  1.新创建一个组件写店铺信息
  2.拿到数据进行展示

5.房屋措施
  1.因为结构和后面的差不多，封装一个组件，因为比较通用放到compoents中detail-section
  2.在创建一个组件使用上面的组件封装一个房屋设施的组件

6.房东介绍
7.评论