#methods属性
  .methods属性是一个对象，通常我们会对这个对象中定义很多的方法。
    *这些方法可以被绑定到模板中
    *这些方法中，我们可以使用this关键字来直接访问到data中返回的对象的属性；
  #提出问题一：不能使用箭头函数？
  我们在methods中要使用data返回对象中的数据
    那么这个this是必须有值的，并且应该可以通过this获取到data返回对象中的数据。
    //this 不能是window，因为window中我们无法获取到data返回对象中的数据
    // 如果我们使用箭头函数，那么这个this就会是window了
    // 为什么是window呢？
    // 这里涉及到箭头函数使用this的查找规则，它会在自己的上层作用域中查找this
    // 最终刚好找到script作用域中得this，就是window
  #提出问题二：不使用箭头函数的情况下，this到底指向的是什么？（可作面试题）

  ######注意
    注意，不应该使用箭头函数来定义method函数（例如plus：()=>this.a++）。理由是箭头函数绑定了父级作用域的上下文，所以this将
    不会按照期望指向组件实例。this.a将是undefined.
  
#其他属性
  比如props，computed，watch，emits，setup等等
  也包括很多生命周期函数
  
#######################################################################################

# VSCode代码片段
  具体步骤：
  1.复制自己需要生成代码的片段；
  2.https://snippet-generator.app/在该网页中生成代码片段；、 第一个框描述，第二个框快捷键
  3.在VSCode中配置代码片段
    文件->首先项->配置用户代码片段->复制网站编译好的代码到html格式当中

# 模板语法
  .React的开发模式：
    .React使用的jsx，所以对应的代码都是编写的类似于js的一种语言
    .之后通过Babel将jsx编译成React.createElement函数调用
    要学习React就要学习jsx
  .vue也支持jsx的开发模式
    .但大多数情况下，使用基于HTML的模板语法
    .在模板中，允许开发者以声明式的方式将DOM和底层组件实例的数据绑定在一起；
    .在底层的实现中，Vue将模板编译成虚拟DOM渲染函数。
  所以，学习vue，学习模板语法是非常重要的

# 1Mustache语法
  Mustache双大括号语法 （胡子语法/插值语法）{{}}
  1.如果我们希望吧数据显示到模板（template）中，使用最多的语法是“Mustache”语法（双大括号）的文本插值
    .data返回的对象是有添加到Vue的响应式系统中
    .当data中的数据发生改变时，对应的内容也会发生更新
    .当然，Mustache中不仅可以是data中的属性，也可以是一个JavaScript的表达式

# 2常见的基本指令
  1.v-once指令（了解）
    v-noce用于指定元素或组件只渲染一次
      当数据发生改变时，元素或者组件及其所有的子元素将视为静态内容并且跳过；
      该指令可以用于性能优化

  2.v-text指令（了解）
    用于更新元素的textContent；

  3.v-html指令
    默认情况下，如果我们展示的内容本身是html的，那么vue并不会对其进行特殊的解析
      如果我们希望这个内容被vue可以解析出来，就可以使用v-html来展示

  4.v-pre指令
    v-pre用于跳过元素和它的子元素的编译过程，显示原始的Mustache标签；
      跳过不需要编译的节点，加快编译的速度

  5.v-cloak指令 cloak（斗篷）
    可以给某个元素加上一个斗篷，这个指令保持在元素上直到关联组件实例结束编译
      和css规则如[v-cloak]{display:none}一起用时，这个指令可以隐藏为编译的Mustache标签直到组件实例准备完毕

  用的比较多的指令如下

  6.v-memo指令
    做性能优化的，

  7.v-bind指令的绑定属性
    .上面的一系列指令，主要是将值插入到模板内容中
    .但除了内容需要动态来决定外，某些属性我们也希望动态来绑定
      比如动态绑定a元素的href属性
      比如动态绑定img元素的src属性
    .绑定属性我们使用v-bind：
      缩写：：
      预期：any（with argument）|object（without argument）
      参数：attrOrProp（optional）
      修饰符:
        .camel - 将kebab-case attribute名转换为camelCase
      用法：动态地绑定一个或多个attribute，或一个组件prop到表达式

    .v-bind用于绑定一个或多个属性值，或者向另一个组件传递props值
    .在开发中那些属性需要动态绑定呢？
      如图片的链接src，网站的href，动态绑定一些类，样式等等
    
    .绑定class介绍
      在开发中，有时候我们的元素class也是动态的。比如：
        .当数据为某个状态时，字体显示红色。
        .当数据另一个状态时，字体显示黑色。
    
    .绑定class有两种方式：
      对象语法
      数组语法

      对象语法：我们可以传给:class一个对象，以动态地切换class

      数组语法：我们可以把一个数组传给:class，以应用一个class列表





# 3v-bind绑定属性

# 4绑定class和style
  .我们可以利用v-bind:style来绑定一些CSS内联样式：
    这次因为某些样式我们需要根据数据动态来决定
    比如某段文字的颜色，大小等等
  .CSS property 名可以用驼峰式或短横线分隔来命名，用短横线要配上引号不然会保存如：'font-size'
  .绑定class有两种方式：  
    对象语法
    数字语法

# 5v-on绑定事件

# 6Vue的条件渲染