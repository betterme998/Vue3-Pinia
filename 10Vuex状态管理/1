一.认识应用状态管理
  1.什么是状态管理
    .在开发中，我们会的应用程序需要处理各种各样的数据，这些数据需要保存在我们应用程序中的某个位置，对于这些数据的管理我们就称之为状态管理
    .在前面我们是如何管理自己的状态呢？
      .在Vue开发中，我们使用组件化的开发方式
      .而在组件中我们定义data或者在setup中返回使用数据，这些数据我们称之为state
      .在模块template中我们可以使用这些数据，模块最终会被渲染成DOM，我们称之为View；
      .在模块中我们会产生一些行为事件，处理这些行为事件，有可能会修改state，这些行为事件我们称之为actions
  2.复杂的状态管理
    .JavaScript开发的应用程序，已经变得越来越复杂了
      .JavaScript需要管理的状态越来越多，越来越复杂；
      .这些状态包括服务器返回的数据，缓存数据，用户操作产生的数据等等
      .也包括一些UI状态，比如某些元素是否被选中，是否显示加载动效，当前分页
  3.Vuex的状态管理
    .管理不断变化的state本身是非常困难的
      .状态之间相互存在依赖，一个状态的变化会引起另一个状态的变化，View页面也可能会引起状态的变化；
      .当应用程序复杂时，state在什么时候，因为什么原因而变化，发生了怎样的变化，会变得非常难以控制和追踪；
    .因此，我们是否可以考虑将组件的内部状态抽离出来，以一个全局单例的方式来管理呢？
      .在这种模式下，我们的组件树构成了一个巨大的“视图View”
      .不管在树的哪里位置，任何组件都能获取状态或者触发行为
      .通过定义和隔离状态管理中的各个概念，并通过强制性的规则来维护试图和状态间的独立性，我们的代码会变得更加结果化和易维护，跟踪
二.Vuex的基本使用
  1.安装vuex  npm install vuex 
三.核心概念State

四.核心概念Getters
  getters的基本使用
  getters相应的computed，当我们希望数据改变之后再传给别人使用时使用getters
五.核心概念Mutations
  Mutation基本使用
  .更改Vuex的store中的状态的唯一方法是提交mutation
六.核心概念Actions

七.核心概念Modules