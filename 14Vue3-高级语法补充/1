1.1.创建一个vite项目
    .npm init vue@latest

1.Vue中自定义指令
  .在Vue的模板语法中我们学习过各种各样的指令：v-show，v-for，v-model等等，除了使用这些指令之外，Vue也允许我们来自定义自己的指令。
    .注意：在Vue中，代码的复用和抽象主要还是通过组件
    .通常在某些情况下，你需要对DOM元素进行底层操作，这个时候就会用到自定义指令

  .自定义指令分为两种
    .自定义局部指令：组件中通过directives选项，只能在当前组件中使用
    .自定义全局指令：app的directive方法，可以在任意组件中被使用
  
  .比如我们来做一个非常简单的案例：当某个元素挂载完成后可以自定义获取焦点
    .实现方式一：如果我们使用默认的实现方式
    .实现方式二：自定义一个v-focus的局部指令
    .实现方式三：自定义一个v-focus的全局指令
  1.1.指令的生命周期
    一个指令定义的对象，Vue提供了如下的几个钩子函数：
    .created：在绑定元素的attribute或事件监听器被应用之前调用；
    .beforeMount:当指令第一次绑定到元素并且在挂载父组件之前调用；
    .mounted：在绑定元素的父组件被挂载后调用；
    .beforeUpdate:在更新包含组件的VNode之前调用
    .updated：在包含组件的VNode及其子组件的VNode更新后调用；
    .beforeUnmount：在卸载绑定元素的组件之前调用
    .unmounted：当指令与元素解除绑定且父组件已卸载时，只调用一次
  
  1.2.指令的参数和修饰符
  


2.Vue内置组件Teleport
  1.认识Teleport
  .在组件化开发中，我们封装一个组件A，在另一个组件B中使用
    .那么组件A中template的元素，会被挂载到组件B中template的某个位置
    .最终我们的应用程序会形成一颗DOM树结构
  .但是某些情况下，我们希望组件不是挂载在这个组件上的，可能是移动到Vue app之外的其他位置
    .比如移动到body元素上，或者我们有其他的div#app之外的元素上；
    .这个时候可以通过teleport来完成；

  .Teleport是什么呢？
    .它是一个Vue提供的内置组件，类似于react的portals；
    teleport翻译过来是心灵传输，远距离传输的意识
      .它有两个属性
        .to：指定将其中的内容移动到的目标元素，可以使用选择器；
        .disabled:是否禁用teleport的功能

3.Vue内置组件Suspense
  1.异步组件和Suspense
  .Suspense是一个内置的全局组件，该组件有两个插槽：
    .default： 如果default可以显示，那么显示default的内容
    .fallback：如果default无法显示，那么显示fallback插槽的内容
  
  用在异步组件中的

4.Vue中安装插件的方式

5.Vue中渲染函数的使用

6.Vue中编写jsx的语法